#!/usr/bin/env python3

import os
import re
import sys

if len(sys.argv) < 2:
   print("error: too few arguments", file=sys.stderr)
         
path = sys.argv[2]

def lookup_regex(fname, pat):
   p = re.compile(pat)
   cnt = 1
   try:
      with open(path+'/'+fname) as f:  
         line = f.readline()
         while line:
            m = p.search(line)
            if m != None:
               return str(cnt)
            cnt += 1
            line = f.readline()
         print("error: cannot find pat in %s" % fname, file=sys.stderr)
   except IOError:
      print("error: cannot open %s" % fname, file=sys.stderr)
      return "0"
   
def lineref(l):
   p = re.compile(r'\\lineref{(.*):\/(.*)\/}')
   m = p.search(l)
   if m != None:
      f = m.groups()[0]
      n = lookup_regex(f, m.groups()[1])
      l = p.sub(r'\\lineref{%s}{%s}' % (f,n), l)
      print(l, end="")
      return
   p = re.compile(r'\\lineref\{(.*):(\d+)\}')
   m = p.search(l)
   if m != None:
      f = m.groups()[0]
      n = m.groups()[1]
      l = p.sub(r'\\lineref{%s}{%s}' % (f, n), l)
      print(l, end="")
      return
   p = re.compile(r'\\linerefs{(.*):(.*),(.*)}')
   m = p.search(l)
   if m != None:
      n = lookup_regex(m.groups()[0], m.groups()[1])
      n1 = lookup_regex(m.groups()[0], m.groups()[2])
      l = p.sub(r'\\linerefs{%s-%s}' % (n, n1), l)
      print(l, end="")
      return
   print(l, end="")

with open(sys.argv[1]) as f:  
   line = f.readline()
   while line:
       lineref(line)
       line = f.readline()
